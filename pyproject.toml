[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cmdrnafold"
version = "0.0.6"
description = "Professional Python wrapper for ViennaRNA commandline tools with async support"
authors = ["Reto Stamm <reto@retospect.ch>"]
maintainers = ["Reto Stamm <reto@retospect.ch>"]
readme = "README.md"
license = "GPL-3.0-or-later"
homepage = "https://github.com/retospect/cmdrnafold"
repository = "https://github.com/retospect/cmdrnafold"
documentation = "https://github.com/retospect/cmdrnafold#readme"
keywords = [
    "bioinformatics",
    "rna",
    "rna-folding", 
    "vienna-rna",
    "structural-biology",
    "computational-biology",
    "async",
    "wrapper"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
requires-python = ">=3.10"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/retospect/cmdrnafold/issues"
"Changelog" = "https://github.com/retospect/cmdrnafold/releases"
"Discussions" = "https://github.com/retospect/cmdrnafold/discussions"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0,<9.0.0"
pytest-cov = ">=4.1.0,<6.0.0"
pytest-asyncio = ">=0.21.0,<1.0.0"
black = ">=23.0.0,<25.0.0"
isort = ">=5.12.0,<6.0.0"
flake8 = ">=6.0.0,<8.0.0"
flake8-docstrings = ">=1.7.0,<2.0.0"
mypy = ">=1.5.0,<2.0.0"
pre-commit = ">=3.4.0,<4.0.0"
bandit = ">=1.7.5,<2.0.0"
types-setuptools = ">=68.0.0" 

[tool.bumpver]
current_version = "0.0.6"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/cmdrnafold/__init__.py" = ["{version}"]

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cmdrnafold"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=cmdrnafold",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
    "--cov-fail-under=90"
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

